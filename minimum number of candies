There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings.

You are giving candies to these children subjected to the following requirements:

Each child must have at least one candy.

Children with a higher rating get more candies than their neighbors.

Print the minimum number of candies you need to have to distribute the candies to the children.



Input Format:

First line - n, the size of array

Second line - all the n elements



Output Format:

A single integer representing the minimum number of candies you need to have to distribute the candies to the children.



Sample Input1:

3

1 0 2



Sample Output1:

5



Explanation:

You can allocate to the first, second and third child with 2, 1, 2 candies respectively.



Sample Input2:

10

9 10 5 1 8 2 5 2 3 7 



Sample Output2:

18

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import java.util.*;
public class Main 
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) 
        {
            a[i] = sc.nextInt();
        }
        int[] c = new int[n];
        for (int i = 0; i < n; i++) 
        {
            c[i] = 1;
        }
        for (int i = 1; i < n; i++) 
        {
            if (a[i] > a[i - 1]) 
            {
                c[i] = c[i - 1] + 1;
            }
        }
        for (int i = n - 2; i >= 0; i--) 
        {
            if (a[i] > a[i + 1]) 
            {
                c[i] = Math.max(c[i], c[i + 1] + 1);
            }
        }
        int t = 0;
        for (int i = 0; i < n; i++) 
        {
            t += c[i];
        }
        System.out.println(t);
    }
}
