Binary Array Sorting
Given a binary array A[] of size N. The task is to arrange the array in increasing order.

Note: The binary array contains only 0's and 1's.



Format:

Input:

The first line of input contains an integer T, denoting the test cases. Every test case contains two lines, the first line is N (size of an array) and the second line is space-separated elements of an array.

Output:

Space-separated elements of sorted arrays. There should be a new line between the output of every test case.



Constraints:

1 < = T <= 100

1 <= N <= 106

0 <= A[i] <= 1



Example:

Input:

2

5

1 0 1 1 0

10

1 0 1 1 1 1 1 0 0 0

Output:

0 0 1 1 1

0 0 0 0 1 1 1 1 1 1




Case 1
Case 2
Input (stdin)
2
5
1 0 1 1 0
10
1 0 1 1 1 1 1 0 0 0

Output (stdout)
0 0 1 1 1
0 0 0 0 1 1 1 1 1 1

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import java.util.*;
class Main
{
  public static void main(String args[])
  {
    Scanner sc = new Scanner(System.in);
    int t = sc.nextInt();
    for(int j=0;j<t;j++)
    {
      int n = sc.nextInt();
      int[] arr = new int[n];
      int c1 =0;
      int c2 = 0;
      for(int i=0;i<n;i++)
      {
        arr[i] = sc.nextInt();
        if(arr[i]==0)
        {
          c1++;
        }
        else
        {
          c2++;
        }
      }
      for(int i=0;i<c1;i++)
      {
        System.out.print("0 ");
      }
      for(int i=0;i<c2;i++)
      {
        System.out.print("1 ");
      }
    System.out.println();
    }
  }
}
