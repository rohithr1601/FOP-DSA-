Longest palindromic subsequence
Write a program to find the longest palindromic subsequence of a given string.



Format:

Input:

abcdefghcba

Output:

7


Case 1
Case 2
Input (stdin)
abcdefghcba

Output (stdout)
7

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import java.util.*;
public class Main
{
    static int lcs(String s1, String s2)
    {
        int n = s1.length();
        int m = s2.length();
        int dp[][] = new int[n+1][m+1];
        for(int i=0;i<=n;i++)
        {
            dp[i][0] = 0;
        }
        for(int i=0;i<=m;i++)
        {
            dp[0][i] = 0;
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(s1.charAt(i-1)==s2.charAt(j-1))
                {
                    dp[i][j] = 1+dp[i-1][j-1];
                }
                else
                {
                    dp[i][j] = 0 + Math.max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
        return dp[n][m];
    }
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    String s1 = sc.nextLine();
	    String s2 = new StringBuilder(s1).reverse().toString();
	    System.out.println(lcs(s1,s2));
	}
}
