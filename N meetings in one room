N meetings in one room
In a firm, we have only one meeting room. And there are N meetings in the form of (S[i], F[i]). Where S[i] is the start time of meeting i and F[i] is the finish time of meeting i. What is the maximum number of meetings that can be accommodated in this meeting room?



Format:

Input:

The first line of the input consists of a number denoting the test cases. The description of T test cases is as follows: The first line consists of the size of an array. The second line has an array consists of starting time of all the meetings each separated by a space, that is S[i]. And the third line has the array consists of end time of all the meetings each separated by a space, that is F[i].

Output:

In each separate lines. Print the order in which the meetings takes place, separated by space.



Constraints:

1 ≤ T ≤ 70

1 ≤ N ≤ 100

1 ≤ S[ i ], F[ i ] ≤ 100000



Example:

Input:

2

6

1 3 0 5 8 5

2 4 6 7 9 9

8

75250 50074 43659 8931 11273 27545 50879 77924

112960 114515 81825 93424 54316 35533 73383 160252 

Output:

1 2 4 5

6 7 1

Explanation:

Testcase 1: Four meetings can be held with the given start and end timings.

 


Case 1
Case 2
Input (stdin)
2
6
1 3 0 5 8 5
2 4 6 7 9 9
8
75250 50074 43659 8931 11273 27545 50879 77924
112960 114515 81825 93424 54316 35533 73383 160252 

Output (stdout)
1 2 4 5
6 7 1

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import java.util.*;
public class Main
{
	public static void main(String[] args) 
	{
	    Scanner sc = new Scanner(System.in);
	    int t = sc.nextInt();
	    for(int i=0;i<t;i++)
	    {
	        int n = sc.nextInt();
	        int[] s = new int[n];
	        int[] e = new int[n];
	        for(int j=0;j<n;j++)
	        {
	            s[j] = sc.nextInt();
	        }
	        for(int k=0;k<n;k++)
	        {
	            e[k] = sc.nextInt();
	        }
	        int[] ind = new int[n];
	        for(int j=0;j<n;j++)
	        {
	            ind[j] = j+1;
	        }
	        int temp =0;
	        for(int j =0;j<n-1;j++)
	        {
	            for(int k=0;k<n-j-1;k++)
	            {
	                if(e[k]> e[k+1])
	                {
	                    temp = e[k];
	                    e[k] = e[k+1];
	                    e[k+1] = temp;
	                    temp = s[k];
	                    s[k] = s[k+1];
	                    s[k+1] = temp;
	                    temp = ind[k];
	                    ind[k] = ind[k+1];
	                    ind[k+1] = temp;
	                }
	            }
	        }
	        int f=0;
	        System.out.print(ind[0] + " " );
	        for(int j =1;j<n;j++)
	        {
	            if(s[j] >= e[f])
	            {
	                System.out.print(ind[j] + " " );
	                f = j;
	            }
	        }
          System.out.println();
	    }
	}
}
