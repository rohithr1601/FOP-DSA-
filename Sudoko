import java.util.*;
public class Main
{
  static int[][] grid;
  public static void main (String[]args)
  {
	Scanner sc = new Scanner (System.in);
	int row = sc.nextInt ();
	int col = sc.nextInt ();
	  grid = new int[row][col];
	for (int i = 0; i < row; i++)
	  {
		for (int j = 0; j < col; j++)
		  {
			grid[i][j] = sc.nextInt ();
		  }
	  }
	if (sudoku (0, 0))
	  {
		for (int i = 0; i < row; i++)
		  {
			for (int j = 0; j < col; j++)
			  {
				System.out.print (grid[i][j] + " ");
			  }
			System.out.println ();
		  }
	  }
	else
	  {
		System.out.println ("Solution not found");
	  }
  }
  static boolean sudoku (int row, int col)
  {
	if (row == grid.length)
	  return true;
	int nrow = 0;
	int ncol = 0;
	if (col != grid.length - 1)
	  {
		nrow = row;
		ncol = col + 1;
	  }
	else
	  {
		nrow = row + 1;
		ncol = 0;
	  }
	if (grid[row][col] != 0)
	  {
		if (sudoku (nrow, ncol))
		  return true;
	  }
	else
	  {
		for (int i = 1; i <= 9; i++)
		  {
			if (isSafe (row, col, i))
			  {
				grid[row][col] = i;
				if (sudoku (nrow, ncol))
				  return true;
				grid[row][col] = 0;
			  }
		  }
	  }
	return false;
  }
  static boolean isSafe (int row, int col, int num)
  {
	for (int i = 0; i < grid.length; i++)
	  {
		if (grid[i][col] == num)
		  return false;
		if (grid[row][i] == num)
		  return false;
	  }
	int srr = (row / 3) * 3;
	int src = (col / 3) * 3;
	for (int i = srr; i < srr + 3; i++)
	  {
		for (int j = src; j < src + 3; j++)
		  {
			if (grid[i][j] == num)
			  {
				return false;
			  }
		  }
	  }
	return true;
  }
}
